use bsl_analyzer::docs_integration::hybrid_storage::HybridDocumentationStorage;
use anyhow::Result;
use tracing_subscriber;

fn main() -> Result<()> {
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    tracing_subscriber::fmt()
        .with_max_level(tracing::Level::INFO)
        .init();

    println!("=== BSL Documentation Hybrid Converter ===");
    println!("Converting chunked format to hybrid storage format...");

    let chunked_path = "output/docs_search";
    let hybrid_path = "output/hybrid_docs";

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –≥–∏–±—Ä–∏–¥–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    let mut storage = HybridDocumentationStorage::new(hybrid_path);

    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ chunked —Ñ–æ—Ä–º–∞—Ç–∞
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å convert_from_chunked –º–µ—Ç–æ–¥
    println!("‚ö†Ô∏è –ú–µ—Ç–æ–¥ convert_from_chunked –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω");

    println!("‚úÖ Conversion completed successfully!");
    println!("üìÅ Hybrid documentation saved to: {}", hybrid_path);

    Ok(())
}