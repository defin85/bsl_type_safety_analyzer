import * as vscode from 'vscode';
import { BslAnalyzerConfig } from '../config';
import * as fs from 'fs';

let outputChannel: vscode.OutputChannel | undefined;

export function setOutputChannel(channel: vscode.OutputChannel) {
    outputChannel = channel;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
 */
export function getConfigurationPath(): string {
    return BslAnalyzerConfig.configurationPath;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
 */
export function getPlatformVersion(): string {
    return BslAnalyzerConfig.platformVersion;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ –∞—Ä—Ö–∏–≤—É –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
 */
export function getPlatformDocsArchive(): string {
    const userArchive = BslAnalyzerConfig.platformDocsArchive;
    
    if (userArchive && fs.existsSync(userArchive)) {
        outputChannel?.appendLine(`üìö Using user-specified platform documentation: ${userArchive}`);
        return userArchive;
    }
    
    if (!userArchive) {
        outputChannel?.appendLine(`‚ö†Ô∏è Platform documentation not configured. Some features may be limited.`);
        outputChannel?.appendLine(`üí° Specify path to rebuilt.shcntx_ru.zip or rebuilt.shlang_ru.zip in settings.`);
    } else {
        outputChannel?.appendLine(`‚ùå Platform documentation not found at: ${userArchive}`);
    }
    
    return '';
}