{
  "name": "bsl-type-safety-analyzer",
  "version": "1.9.0",
  "description": "BSL Type Safety Analyzer with automated VSCode extension rebuilding",
  "private": true,
  "scripts": {
    "build:rust": "node scripts/cargo-wrapper.js build --profile dev-fast",
    "build:rust:dev": "node scripts/cargo-wrapper.js build",
    "build:rust:fast": "node scripts/cargo-wrapper.js build --profile dev-fast",
    "build:rust:release": "node scripts/cargo-wrapper.js build --release",
    "build:extension": "cd vscode-extension && npm run compile",
    "package:extension": "cd vscode-extension && npx @vscode/vsce package",
    "rebuild:extension": "node scripts/rebuild-extension.js",
    "rebuild:quick": "npm run build:rust && npm run copy:binaries && npm run build:extension",
    "rebuild:dev": "npm run build:rust:dev && npm run copy:binaries:dev && npm run build:extension",
    "rebuild:fast": "npm run build:rust:fast && npm run copy:binaries:dev && npm run build:extension",
    "build:smart": "node scripts/build-smart.js fast",
    "build:smart:dev": "node scripts/build-smart.js dev",
    "build:smart:release": "node scripts/build-smart.js release",
    "watch": "node scripts/watch-dev.js",
    "watch:rust": "echo '⚠️  Для Rust-only watch установите: cargo install cargo-watch' && echo '📘 Затем: cargo watch -x \"build --profile dev-fast\"'",
    "watch:extension": "cd vscode-extension && npm run watch",
    "watch:install": "npm install --save-dev chokidar",
    "dev": "npm run build:smart:dev",
    "interactive": "node scripts/interactive-dev.js",
    "lint:clippy": "node scripts/cargo-wrapper.js clippy -- -D warnings",
    "fmt:check": "cargo fmt -- --check",
    "fmt:fix": "cargo fmt",
    "test": "node scripts/cargo-wrapper.js test",
    "test:verbose": "node scripts/cargo-wrapper.js test -- --nocapture",
    "copy:binaries": "node scripts/copy-essential-binaries.js dev-fast",
    "copy:binaries:dev": "node scripts/copy-essential-binaries.js debug",
    "copy:binaries:release": "node scripts/copy-essential-binaries.js release",
    "copy:binaries:all": "node -e \"const {execSync} = require('child_process'); const cmd = process.platform === 'win32' ? 'copy target\\\\dev-fast\\\\*.exe vscode-extension\\\\bin\\\\' : 'cp target/dev-fast/*.exe vscode-extension/bin/'; try { execSync(cmd, {stdio: 'inherit'}); } catch(e) { console.log('Copy completed with warnings'); }\"",
    "check:binaries": "node scripts/check-binaries.js",
    "cleanup:project": "node scripts/cleanup-project.js",
    "deep-cleanup": "node scripts/deep-cleanup.js",
    "version:patch": "node scripts/version-sync.js patch",
    "version:minor": "node scripts/version-sync.js minor",
    "version:major": "node scripts/version-sync.js major",
    "version:sync": "node scripts/version-sync.js",
    "build:patch": "node scripts/build-with-version.js patch",
    "build:minor": "node scripts/build-with-version.js minor",
    "build:major": "node scripts/build-with-version.js major",
    "build:release": "node scripts/build-with-version.js --skip-version",
    "git:release": "node scripts/git-workflow.js release",
    "git:dev": "node scripts/git-workflow.js dev",
    "git:commit": "node scripts/git-workflow.js commit",
    "git:version": "node scripts/git-workflow.js version",
    "publish:marketplace": "npm run build:release && cd vscode-extension && npx @vscode/vsce publish",
    "publish:github": "npm run git:release minor && git push origin main --follow-tags",
    "publish:check": "cd vscode-extension && npx @vscode/vsce ls",
    "clean:old-packages": "find vscode-extension/dist/ -name 'bsl-type-safety-analyzer-*.vsix' ! -name 'bsl-type-safety-analyzer-1.6.0.vsix' -delete 2>/dev/null || true",
    "postpackage": "npm run clean:old-packages"
  },
  "devDependencies": {
    "chokidar": "^3.6.0",
    "glob": "^10.3.3",
    "husky": "^8.0.3"
  },
  "keywords": [
    "bsl",
    "1c",
    "static-analysis",
    "rust",
    "vscode-extension",
    "automation"
  ],
  "author": "BSL Analyzer Team",
  "license": "MIT",
  "dependencies": {
    "prompts": "^2.4.2"
  }
}